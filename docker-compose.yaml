version: '3.7'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            target: production
        container_name: egecourse
        ports:
            # APPLICATION_PORT загружается из .env
            - '${APPLICATION_PORT}:${APPLICATION_PORT}'
        volumes:
            - app_uploads:/app/uploads
        environment:
            # Загружаем все переменные из .env
            # Docker Compose автоматически подставит значения из вашего .env файла.
            # Важно: для POSTGRES_HOST и REDIS_HOST мы явно переопределяем их здесь,
            # чтобы ваше приложение использовало имена сервисов, а не 'localhost'.
            NODE_ENV: '${NODE_ENV}'
            APPLICATION_PORT: '${APPLICATION_PORT}'
            APPLICATION_URL: '${APPLICATION_URL}'
            ALLOWED_ORIGIN: '${ALLOWED_ORIGIN}'
            COOKIES_SECRET: '${COOKIES_SECRET}'
            SESSION_SECRET: '${SESSION_SECRET}'
            SESSION_NAME: '${SESSION_NAME}'
            SESSION_DOMAIN: '${SESSION_DOMAIN}'
            SESSION_MAX_AGE: '${SESSION_MAX_AGE}'
            SESSION_HTTP_ONLY: '${SESSION_HTTP_ONLY}'
            SESSION_SECURE: '${SESSION_SECURE}'
            SESSION_FOLDER: '${SESSION_FOLDER}'

            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
            POSTGRES_HOST: '${POSTGRES_HOST}' # Переопределяем, чтобы использовать имя сервиса
            POSTGRES_PORT: '${POSTGRES_PORT}' # Используем стандартный порт контейнера DB
            POSTGRES_DB: '${POSTGRES_DB}'
            # Собираем DATABASE_URL из переменных, которые будут в контейнере
            DATABASE_URL: 'postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}'

            REDIS_USER: '${REDIS_USER}'
            REDIS_PASSWORD: '${REDIS_PASSWORD}'
            REDIS_HOST: '${REDIS_HOST}' # Переопределяем, чтобы использовать имя сервиса
            REDIS_PORT: '${REDIS_PORT}' # Используем стандартный порт контейнера Redis
            # Собираем REDIS_URI из переменных, которые будут в контейнере
            REDIS_URI: 'redis://:${REDIS_PASSWORD}@${REDIS_HOST}:${REDIS_PORT}'

            MAIL_HOST: '${MAIL_HOST}'
            MAIL_PORT: '${MAIL_PORT}'
            MAIL_LOGIN: '${MAIL_LOGIN}'
            MAIL_PASSWORD: '${MAIL_PASSWORD}'

        depends_on:
            - db
            - redis
        networks:
            - backend

    db:
        container_name: postgres
        image: postgres:15.2
        restart: always
        environment:
            # Эти переменные используются самим контейнером PostgreSQL
            POSTGRES_USER: '${POSTGRES_USER}'
            POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
            POSTGRES_DB: '${POSTGRES_DB}'
        # Порт для доступа к DB с хоста, загружается из .env
        ports:
            - '${POSTGRES_PORT}:5432'
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - backend

    redis:
        container_name: redis
        image: redis:5.0
        restart: always
        environment:
            # Пароль для Redis, используется в команде запуска
            REDIS_PASSWORD: '${REDIS_PASSWORD}'
        # Порт для доступа к Redis с хоста, загружается из .env
        ports:
            - '${REDIS_PORT}:6379'
        command: redis-server --requirepass "${REDIS_PASSWORD}" # Используем переменную из .env
        volumes:
            - redis_data:/data
        networks:
            - backend

volumes:
    postgres_data:
    redis_data:
    app_uploads:

networks:
    backend:
